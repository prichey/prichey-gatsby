{"version":3,"sources":["webpack:///path---projects-personal-roadkillbot-86425c714260b9daeb2d.js","webpack:///./.cache/json/projects-personal-roadkillbot.json"],"names":["webpackJsonp","356","module","exports","data","markdownRemark","html","frontmatter","title","link","repo","date","zoom","lang","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,i5HAA6kFC,aAA+3CC,MAAA,eAAAC,KAAA,kCAAAC,KAAA,yCAAAC,KAAA,OAAAC,KAAA,KAAAC,KAAA,UAA0JC,aAAgBC,KAAA","file":"path---projects-personal-roadkillbot-86425c714260b9daeb2d.js","sourcesContent":["webpackJsonp([280652570126437],{\n\n/***/ 356:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p><a href=\\\"https://techcrunch.com/2015/03/01/meerkat/\\\" target=\\\"_blank\\\">Meerkat</a>,\\nthe now-defunct live-streaming app predating Twitter's own Periscope by only a\\nfew precious months, was released to the general public in early March 2015. The\\napp, in what would eventually become its downfall, lacked its own\\ninfrastructure, so Meerkat streams were necessarily distributed through one's\\nown Twitter feed. Yet there was no way to archive a stream for later viewing (as\\nPeriscope does now), so clicking on a link (which was accompanied with Meerkat's\\nautomated stream description, \\\"|LIVE NOW|\\\") often took you to a 'stream over'\\nlanding page, since most streams, especially early on, were live for just a\\nminute or two.</p>\\n<p>This frustrated me. It frustrated others, as well. John Constine, in his March\\n1st <a href=\\\"https://techcrunch.com/2015/03/01/meerkat/\\\" target=\\\"_blank\\\">launch\\narticle</a> for TechCrunch, wrote:</p>\\n<blockquote>\\n<p>\\\"The only real downside to the reliance on Twitter is that Meerkat links live\\nforever in tweets, even through the streams they lead to may be over and gone\\nin a few minutes. That’s one thing Twitter could improve on if it built or\\nbought something like Meerkat.\\\"</p>\\n</blockquote>\\n<p>So, I set out to do something about it. The idea I came up with was Roadkill\\nCollector\\n(<a href=\\\"https://twitter.com/roadkillbot\\\" target=\\\"_blank\\\">@roadkillbot</a>), my\\nfirst real Twitterbot. The idea was simple: watch for tweets with Meerkat stream\\nlinks, check if the stream had ended, and if so, tweet at the user asking them\\nto delete the stream tweet (in retrospect, the copy I used could have been a bit\\nless cheeky and more direct). Twitter users could also follow the account and be\\nable to see the bot's reply to the original Meerkat stream inline (since with\\nTwitter you'll only see @reply's to users you also follow), saving them the time\\nof clicking on the stream.</p>\\n<blockquote class=\\\"twitter-tweet\\\" data-lang=\\\"en\\\"><p lang=\\\"en\\\" dir=\\\"ltr\\\"><a href=\\\"https://twitter.com/Gina_Coburn?ref_src=twsrc%5Etfw\\\">@Gina_Coburn</a> |STREAM OVER| Looks like we&#39;ve found ourselves a dead meerkat. Mind cleaning up the mess?</p>&mdash; Roadkill Collector (@roadkillbot) <a href=\\\"https://twitter.com/roadkillbot/status/579810929879158785?ref_src=twsrc%5Etfw\\\">March 23, 2015</a></blockquote>\\n<p>The bot ran for just 2 days, March 22nd &#x26; 23rd, and replied to 759 individual\\ntweets. During this timeframe, @VH1\\n<a href=\\\"https://twitter.com/VH1/status/580068247455842304\\\" target=\\\"_blank\\\">tweeted\\na link</a> to a Meerkat stream of a Q&#x26;A with Shawn Mendes which was retweeted\\nover 1,300 times and received nearly 300 replies. Due to some faulty logic in my\\nscript, the bot saw replies to a dead Meerkat link as individual tweets that\\nthemselves contained dead links, so it replied to lots of tweets mistakenly.\\nLots of users were also either\\n<a href=\\\"https://twitter.com/ryamidon/status/579801414060257280\\\" target=\\\"_blank\\\">perturbed</a>\\nby the bot, or just\\n<a href=\\\"https://twitter.com/GhostRhino23/status/579793803269283840\\\" target=\\\"_blank\\\">confused</a>.\\nI added a default response to any users who tweeted back at the bot, informing\\nusers that it was an automated service and that they could yell at\\n<a href=\\\"https://twitter.com/prestonrichey\\\" target=\\\"_blank\\\">@prestonrichey</a>\\n(me) if they wanted to.</p>\\n<p>I disabled the service because I started to question the ethics of such an\\nautomated, naggy (and somewhat passive-agressive) service. Building the bot was\\na fun exercise, but in the end I figured it should be up to Twitter users if\\nthey wanted to delete Tweets to dead Meerkat streams (even if I still believed\\nthat's what should be done). Twitter has since added a clause in their Terms of\\nService that prevents bots from reaching out to users, unprovoked, something I\\nlearned later on when building\\n<a href=\\\"http://localhost:8000/projects/personal/menemnesa/\\\">@menemnesa</a>.</p>\",\"frontmatter\":{\"title\":\"@roadkillbot\",\"link\":\"https://twitter.com/roadkillbot\",\"repo\":\"https://github.com/prichey/roadkillbot\",\"date\":\"2015\",\"zoom\":null,\"lang\":\"Ruby\"}}},\"pathContext\":{\"slug\":\"/projects/personal/roadkillbot/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---projects-personal-roadkillbot-86425c714260b9daeb2d.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p><a href=\\\"https://techcrunch.com/2015/03/01/meerkat/\\\" target=\\\"_blank\\\">Meerkat</a>,\\nthe now-defunct live-streaming app predating Twitter's own Periscope by only a\\nfew precious months, was released to the general public in early March 2015. The\\napp, in what would eventually become its downfall, lacked its own\\ninfrastructure, so Meerkat streams were necessarily distributed through one's\\nown Twitter feed. Yet there was no way to archive a stream for later viewing (as\\nPeriscope does now), so clicking on a link (which was accompanied with Meerkat's\\nautomated stream description, \\\"|LIVE NOW|\\\") often took you to a 'stream over'\\nlanding page, since most streams, especially early on, were live for just a\\nminute or two.</p>\\n<p>This frustrated me. It frustrated others, as well. John Constine, in his March\\n1st <a href=\\\"https://techcrunch.com/2015/03/01/meerkat/\\\" target=\\\"_blank\\\">launch\\narticle</a> for TechCrunch, wrote:</p>\\n<blockquote>\\n<p>\\\"The only real downside to the reliance on Twitter is that Meerkat links live\\nforever in tweets, even through the streams they lead to may be over and gone\\nin a few minutes. That’s one thing Twitter could improve on if it built or\\nbought something like Meerkat.\\\"</p>\\n</blockquote>\\n<p>So, I set out to do something about it. The idea I came up with was Roadkill\\nCollector\\n(<a href=\\\"https://twitter.com/roadkillbot\\\" target=\\\"_blank\\\">@roadkillbot</a>), my\\nfirst real Twitterbot. The idea was simple: watch for tweets with Meerkat stream\\nlinks, check if the stream had ended, and if so, tweet at the user asking them\\nto delete the stream tweet (in retrospect, the copy I used could have been a bit\\nless cheeky and more direct). Twitter users could also follow the account and be\\nable to see the bot's reply to the original Meerkat stream inline (since with\\nTwitter you'll only see @reply's to users you also follow), saving them the time\\nof clicking on the stream.</p>\\n<blockquote class=\\\"twitter-tweet\\\" data-lang=\\\"en\\\"><p lang=\\\"en\\\" dir=\\\"ltr\\\"><a href=\\\"https://twitter.com/Gina_Coburn?ref_src=twsrc%5Etfw\\\">@Gina_Coburn</a> |STREAM OVER| Looks like we&#39;ve found ourselves a dead meerkat. Mind cleaning up the mess?</p>&mdash; Roadkill Collector (@roadkillbot) <a href=\\\"https://twitter.com/roadkillbot/status/579810929879158785?ref_src=twsrc%5Etfw\\\">March 23, 2015</a></blockquote>\\n<p>The bot ran for just 2 days, March 22nd &#x26; 23rd, and replied to 759 individual\\ntweets. During this timeframe, @VH1\\n<a href=\\\"https://twitter.com/VH1/status/580068247455842304\\\" target=\\\"_blank\\\">tweeted\\na link</a> to a Meerkat stream of a Q&#x26;A with Shawn Mendes which was retweeted\\nover 1,300 times and received nearly 300 replies. Due to some faulty logic in my\\nscript, the bot saw replies to a dead Meerkat link as individual tweets that\\nthemselves contained dead links, so it replied to lots of tweets mistakenly.\\nLots of users were also either\\n<a href=\\\"https://twitter.com/ryamidon/status/579801414060257280\\\" target=\\\"_blank\\\">perturbed</a>\\nby the bot, or just\\n<a href=\\\"https://twitter.com/GhostRhino23/status/579793803269283840\\\" target=\\\"_blank\\\">confused</a>.\\nI added a default response to any users who tweeted back at the bot, informing\\nusers that it was an automated service and that they could yell at\\n<a href=\\\"https://twitter.com/prestonrichey\\\" target=\\\"_blank\\\">@prestonrichey</a>\\n(me) if they wanted to.</p>\\n<p>I disabled the service because I started to question the ethics of such an\\nautomated, naggy (and somewhat passive-agressive) service. Building the bot was\\na fun exercise, but in the end I figured it should be up to Twitter users if\\nthey wanted to delete Tweets to dead Meerkat streams (even if I still believed\\nthat's what should be done). Twitter has since added a clause in their Terms of\\nService that prevents bots from reaching out to users, unprovoked, something I\\nlearned later on when building\\n<a href=\\\"http://localhost:8000/projects/personal/menemnesa/\\\">@menemnesa</a>.</p>\",\"frontmatter\":{\"title\":\"@roadkillbot\",\"link\":\"https://twitter.com/roadkillbot\",\"repo\":\"https://github.com/prichey/roadkillbot\",\"date\":\"2015\",\"zoom\":null,\"lang\":\"Ruby\"}}},\"pathContext\":{\"slug\":\"/projects/personal/roadkillbot/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/projects-personal-roadkillbot.json\n// module id = 356\n// module chunks = 280652570126437"],"sourceRoot":""}